<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dgut.mapper.TStayHospitalMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dgut.pojo.TStayHospital" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="patient_id" property="patientId" jdbcType="VARCHAR" />
    <result column="sickbed_id" property="sickbedId" jdbcType="BIGINT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    
     <!-- 嵌套结果 -->
	<association property="patient" column="patient_id" resultMap="cn.edu.dgut.mapper.TPatientMapper.BaseResultMap" />
  	<association property="sickbed" column="sickbed_id" resultMap="cn.edu.dgut.mapper.TSickbedMapper.BaseResultMap" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, patient_id, sickbed_id, created, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dgut.pojo.TStayHospitalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stay_hospital
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_stay_hospital
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_stay_hospital
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dgut.pojo.TStayHospitalExample" >
    delete from t_stay_hospital
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dgut.pojo.TStayHospital" >
    insert into t_stay_hospital (id, patient_id, sickbed_id, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{patientId,jdbcType=VARCHAR}, #{sickbedId,jdbcType=BIGINT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dgut.pojo.TStayHospital" >
    insert into t_stay_hospital
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="sickbedId != null" >
        sickbed_id,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="patientId != null" >
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="sickbedId != null" >
        #{sickbedId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dgut.pojo.TStayHospitalExample" resultType="java.lang.Integer" >
    select count(*) from t_stay_hospital
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stay_hospital
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.patientId != null" >
        patient_id = #{record.patientId,jdbcType=VARCHAR},
      </if>
      <if test="record.sickbedId != null" >
        sickbed_id = #{record.sickbedId,jdbcType=BIGINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stay_hospital
    set id = #{record.id,jdbcType=BIGINT},
      patient_id = #{record.patientId,jdbcType=VARCHAR},
      sickbed_id = #{record.sickbedId,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dgut.pojo.TStayHospital" >
    update t_stay_hospital
    <set >
      <if test="patientId != null" >
        patient_id = #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="sickbedId != null" >
        sickbed_id = #{sickbedId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dgut.pojo.TStayHospital" >
    update t_stay_hospital
    set patient_id = #{patientId,jdbcType=VARCHAR},
      sickbed_id = #{sickbedId,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <select id="countByCondition"  parameterType="java.util.Map" resultType="int">
  	select count(*) from t_stay_hospital sh, t_patient p,t_sickbed s
  		<where>
  			<if test="sickbedId!=null and !&quot;&quot;.equals(sickbedId.trim())">
  				and s.id like '%' #{sickbedId} '%'
  			</if>
  			<if test="patientName!=null and !&quot;&quot;.equals(patientName.trim())">
  				and p.name like '%' #{patientName} '%'
  			</if>
  			and sh.patient_id = p.patient_id
  			and sh.sickbed_id = s.id
  		</where>

  </select>
   <select id="pageByCondition"  parameterType="java.util.Map" resultMap="BaseResultMap">
  	select sh.*,p.*,s.* from t_stay_hospital sh, t_patient p,t_sickbed s
  		<where>
  			<if test="sickbedId!=null and !&quot;&quot;.equals(sickbedId.trim())">
  				and s.id like '%' #{sickbedId} '%'
  			</if>
  			<if test="patientName!=null and !&quot;&quot;.equals(patientName.trim())">
  				and p.name like '%' #{patientName} '%'
  			</if>
  				and sh.patient_id = p.patient_id
  				and sh.sickbed_id = s.id
  		</where>
  		order by sh.id limit #{pageIndex} ,#{pageSize}
  </select>
  <!-- 批量删除 (通过id)-->
  <delete id="deleteBatch" parameterType="list">
		delete from t_stay_hospital where id in
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
  </delete>
  
   <!-- 批量删除 (通过sickbed_id)-->
  <delete id="deleteBatchBySickIds" parameterType="list">
		delete from t_stay_hospital where sickbed_id in
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
  </delete>
</mapper>