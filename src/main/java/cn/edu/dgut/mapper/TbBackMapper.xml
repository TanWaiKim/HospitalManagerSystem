<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dgut.mapper.TbBackMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dgut.pojo.TbBack" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="back_no" property="backNo" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="drug_id" property="drugId" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, back_no, provider_id, drug_id, quantity, total_price, reason, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dgut.pojo.TbBackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_back
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_back
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dgut.pojo.TbBackExample" >
    delete from tb_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dgut.pojo.TbBack" >
    insert into tb_back (id, back_no, provider_id, 
      drug_id, quantity, total_price, 
      reason, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{backNo,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, 
      #{drugId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{totalPrice,jdbcType=DECIMAL}, 
      #{reason,jdbcType=VARCHAR}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dgut.pojo.TbBack" >
    insert into tb_back
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="backNo != null" >
        back_no,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="drugId != null" >
        drug_id,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="createTime == null" >
        now(),
      </if>
      <if test="updateTime == null" >
        now(),
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="backNo != null" >
        #{backNo,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="drugId != null" >
        #{drugId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime == null" >
        now(),
      </if>
      <if test="updateTime == null" >
        now(),
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dgut.pojo.TbBackExample" resultType="java.lang.Integer" >
    select count(*) from tb_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_back
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.backNo != null" >
        back_no = #{record.backNo,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.drugId != null" >
        drug_id = #{record.drugId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = now(),
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_back
    set id = #{record.id,jdbcType=INTEGER},
      back_no = #{record.backNo,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      drug_id = #{record.drugId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = now()
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dgut.pojo.TbBack" >
    update tb_back
    <set >
      <if test="backNo != null" >
        back_no = #{backNo,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="drugId != null" >
        drug_id = #{drugId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dgut.pojo.TbBack" >
    update tb_back
    set back_no = #{backNo,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=INTEGER},
      drug_id = #{drugId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询最后一条记录 -->
  <select id="selectLastRecord"  resultMap="BaseResultMap">
  	select * from  tb_back order by id desc limit 1
  </select>
 
  <!-- 统计记录数 -->
  <select id="countByCondition"  parameterType="java.util.Map" resultType="int">
  	select count(distinct back_no) from tb_back b
  		<where>
  			<if test="providerId != null">
  				and b.provider_id = #{providerId}
  			</if>
  			<if test="backNo !=null and !&quot;&quot;.equals(backNo.trim())">
  				and b.back_no like '%' #{backNo} '%'
  			</if>
  		</where>
  </select> 
  
  <!-- 条件查询 -->
  <select id="pageByCondition"  parameterType="java.util.Map" resultMap="BaseResultMap">
  	select id,back_no,provider_id,sum(quantity) as quantity,sum(total_price) as total_price,
  	create_time,update_time from tb_back b
  		<where>
  			<if test="providerId != null">
  				and b.provider_id = #{providerId}
  			</if>
  			<if test="backNo !=null and !&quot;&quot;.equals(backNo.trim())">
  				and b.back_no like '%' #{backNo} '%'
  			</if>
  		</where>
  		group by back_no
  		order by b.id limit #{pageIndex} ,#{pageSize}
  </select>
  
  <!-- 批量删除 -->
  <delete id="deleteBatch" parameterType="list">
		delete from tb_back where id in
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
  </delete>
  
  <!-- 查询所有记录 -->
  <select id="selectAllBack"  resultMap="BaseResultMap">
  	select * from  tb_back
  </select>
  
  
  
  <!-- 统计记录数 -->
  <select id="countByBackNo"  parameterType="java.util.Map" resultType="int">
  	select count(*) from tb_back b
  	where b.back_no = #{backNo}
  </select>
  
  <!-- 条件查询 -->
  <select id="selectByBackNoCondition"  parameterType="java.util.Map" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from tb_back b
	    where b.back_no = #{backNo}
  		order by b.id limit #{pageIndex} ,#{pageSize}
  </select>
  
    <!-- 根据退药单号查询 -->
   <select id="selectByBackNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_back
    where back_no = #{backNo,jdbcType=VARCHAR}
  </select>
  
    <!-- 根据药品ID和退药单编号查找 -->
  <select id="getBackByBackNoAndDrugId"  parameterType="java.util.Map" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from tb_back b
	    where b.back_no = #{backNo} and b.drug_id = #{drugId}
  </select>
  
   <!-- 根据退药单编号删单条记录 -->
  <delete id="deleteByBackNo" parameterType="java.lang.String">
  	delete from tb_back where back_no = #{backNo}
  </delete>

   <!-- 根据退药单编号批量删除 -->
  <delete id="deleteByBackNoBatch" parameterType="list">
		delete from tb_back where back_no in
		<foreach collection="list" item="backNo" open="(" close=")"
			separator=",">
			#{backNo}
		</foreach>
  </delete>
  
</mapper>