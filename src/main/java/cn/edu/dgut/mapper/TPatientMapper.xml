<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dgut.mapper.TPatientMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dgut.pojo.TPatient" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="patient_id" property="patientId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="is_finished" property="isFinished" jdbcType="VARCHAR" />
    <result column="mc_name" property="mcName" jdbcType="VARCHAR" />
    <result column="person_type" property="personType" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    
    <!-- 嵌套结果 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, patient_id, name, sex, address, age, is_finished, mc_name, person_type, phone, 
    login_name, login_password, created, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dgut.pojo.TPatientExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_patient
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_patient
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dgut.pojo.TPatientExample" >
    delete from t_patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dgut.pojo.TPatient" >
    insert into t_patient (id, patient_id, name, 
      sex, address, age, 
      is_finished, mc_name, person_type, 
      phone, login_name, login_password, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{patientId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{isFinished,jdbcType=VARCHAR}, #{mcName,jdbcType=VARCHAR}, #{personType,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dgut.pojo.TPatient" >
    insert into t_patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="isFinished != null" >
        is_finished,
      </if>
      <if test="mcName != null" >
        mc_name,
      </if>
      <if test="personType != null" >
        person_type,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="patientId != null" >
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="isFinished != null" >
        #{isFinished,jdbcType=VARCHAR},
      </if>
      <if test="mcName != null" >
        #{mcName,jdbcType=VARCHAR},
      </if>
      <if test="personType != null" >
        #{personType,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dgut.pojo.TPatientExample" resultType="java.lang.Integer" >
    select count(*) from t_patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_patient
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.patientId != null" >
        patient_id = #{record.patientId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.isFinished != null" >
        is_finished = #{record.isFinished,jdbcType=VARCHAR},
      </if>
      <if test="record.mcName != null" >
        mc_name = #{record.mcName,jdbcType=VARCHAR},
      </if>
      <if test="record.personType != null" >
        person_type = #{record.personType,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null" >
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_patient
    set id = #{record.id,jdbcType=BIGINT},
      patient_id = #{record.patientId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      is_finished = #{record.isFinished,jdbcType=VARCHAR},
      mc_name = #{record.mcName,jdbcType=VARCHAR},
      person_type = #{record.personType,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dgut.pojo.TPatient" >
    update t_patient
    <set >
      <if test="patientId != null" >
        patient_id = #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="isFinished != null" >
        is_finished = #{isFinished,jdbcType=VARCHAR},
      </if>
      <if test="mcName != null" >
        mc_name = #{mcName,jdbcType=VARCHAR},
      </if>
      <if test="personType != null" >
        person_type = #{personType,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dgut.pojo.TPatient" >
    update t_patient
    set patient_id = #{patientId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      is_finished = #{isFinished,jdbcType=VARCHAR},
      mc_name = #{mcName,jdbcType=VARCHAR},
      person_type = #{personType,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 条件查询总记录数 -->
  <select id="countByCondition"  parameterType="java.util.Map" resultType="int">
  	select count(*) from t_patient p
  		<where>
  			<if test="patientId!=null and !&quot;&quot;.equals(patientId.trim())">
  				and p.patient_id like '%' #{patientId} '%'
  			</if>
  			<if test="name!=null and !&quot;&quot;.equals(name.trim())">
  				and p.name like '%' #{name} '%'
  			</if>
  			<if test="mcName!=null and !&quot;&quot;.equals(mcName.trim())">
  				and p.mc_name = #{mcName} 
  			</if>
  			<if test="keywords!=null and !&quot;&quot;.equals(keywords.trim())">
  				or p.sex like '%' #{keywords} '%'
  				or p.address like '%' #{keywords} '%'
  				or p.person_type like '%' #{keywords} '%'
  				or p.phone like '%' #{keywords} '%'
  			</if>
  		</where>
  </select>
  <!-- 多条件查询所有病人记录 -->
   <select id="pageByCondition"  parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from t_patient p
  		<where>
  			<if test="patientId!=null and !&quot;&quot;.equals(patientId.trim())">
  				and p.patient_id like '%' #{patientId} '%'
  			</if>
  			<if test="name!=null and !&quot;&quot;.equals(name.trim())">
  				and p.name like '%' #{name} '%'
  			</if>
  			<if test="mcName!=null and !&quot;&quot;.equals(mcName.trim())">
  				and p.mc_name = #{mcName} 
  			</if>
  			<if test="keywords!=null and !&quot;&quot;.equals(keywords.trim())">
  				or p.sex like '%' #{keywords} '%'
  				or p.address like '%' #{keywords} '%'
  				or p.person_type like '%' #{keywords} '%'
  				or p.phone like '%' #{keywords} '%'
  			</if>
  		</where>
  		order by p.id limit #{pageIndex} ,#{pageSize}
  </select>
  <!-- 查询最后一条记录 -->
  <select id="selectLastRecord"  resultMap="BaseResultMap">
  	select * from  t_patient order by id desc limit 1
  </select>
 	<!-- 批量删除 -->
  <delete id="deleteBatch" parameterType="list">
		delete from t_patient where id in
		<foreach collection="list" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
  </delete>
  <!-- 批量插入 -->
  <insert id="insertInfoBatch" parameterType="java.util.List" >  
     insert into t_patient (id, patient_id, name, 
      sex, address, age, 
      is_finished, mc_name, login_name, 
      login_password, person_type, phone,created,updated
      )
    values  
    <foreach collection="list" item="item" index="index" separator=","> 
      (#{item.id,jdbcType=BIGINT}, #{item.patientId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
      #{item.sex,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.age,jdbcType=INTEGER}, 
      #{item.isFinished,jdbcType=VARCHAR}, #{item.mcName,jdbcType=VARCHAR}, #{item.loginName,jdbcType=VARCHAR}, 
      #{item.loginPassword,jdbcType=VARCHAR}, #{item.personType,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
      #{item.created,jdbcType=TIMESTAMP},#{item.updated,jdbcType=TIMESTAMP}
      )
    </foreach>  
</insert>  
  <!-- 查询所有记录 -->
  <select id="selectAllPatient"  resultMap="BaseResultMap">
  	select * from  t_patient
  </select>
  
   <!-- 根据时间查询所有记录 -->
  <select id="selectAllPatientByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"></include>
  	from  t_patient p
  		<where>
  			<if test="beginTime!=null and !&quot;&quot;.equals(beginTime.trim()) and endTime!=null and !&quot;&quot;.equals(endTime.trim())">
  				and p.created <![CDATA[>=]]> #{beginTime} and p.created <![CDATA[<=]]> #{endTime}
  			</if>
  		</where>
  </select>
  <select id="countByPersonType" parameterType="java.util.Map"
		resultType="int">
		select count(*) from t_patient p
		<where>
			<if test="name!=null and !&quot;&quot;.equals(name.trim())">
				and p.name = #{name}
			</if>
			and p.person_type != #{personType}
			order by id
		</where>
	</select>
	
	<select id="pageByPersonType" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select * from t_patient p
		<where>
			<if test="name!=null and !&quot;&quot;.equals(name.trim())">
				and p.name = #{name}
			</if>
			and p.person_type != #{personType}
		</where>
		order by id limit #{pageIndex} ,#{pageSize}
	</select>
  
   <!-- 根据输入字符自动模糊匹配病人id记录 -->
  <select id="selectPatientByAutoComplete" parameterType="string" resultMap="BaseResultMap">
  	select patient_id 
  	from  t_patient
  	where patient_id like '%' #{parameter} '%'
  </select>
</mapper>